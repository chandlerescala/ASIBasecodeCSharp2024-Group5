<<<<<<< Updated upstream
﻿@model CustomFeedbackModel

<!-- Feedback Page Header with Create Button -->
<div class="d-flex justify-content-between align-items-center mb-3">
    <h6 class="fw-bold">Feedbacks</h6>
    <a asp-controller="Feedback" asp-action="Create" class="btn btn-primary w-200-px">
        <i class="bi bi-plus-circle"></i> Create Feedback
    </a>
</div>

<!-- Feedback Table -->
<table class="table bordered-table">
    <thead>
        <tr>
            <th>Ticket ID</th>
            <th>Issue Description</th>
            <th>Feedback</th>
            <th>Rating</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Ticket.Any())
        {
            int i = 0;
            @foreach (var feedback in Model.FeedbackList)
            {
                <tr>
                    <td>@feedback.UserTicketId</td>
                    <td>@Model.Ticket[i].IssueDescription</td>
                    <td>@feedback.FeedbackText</td>
                    <td>@feedback.FeedbackRating</td>
                    <td>
                        <a href="@Url.Action("Edit", "Feedback", new { id = feedback.FeedbackId })" ><i class="bi bi-pencil-square" style="color:#0d6efd"></i></a>
                        <a href="@Url.Action("Delete", "Feedback", new { id = feedback.FeedbackId })" onclick="return confirm('Are you sure you want to delete this feedback?');"><i class="bi bi-trash" style="color:red"></i></a>
                    </td>
                </tr>
                i++;
            }
        }
        else
        {
            <tr>
                <td colspan="5" class="text-center">No feedback available</td>
            </tr>
        }
    </tbody>
</table>

<!-- Style the Feedback Table -->
<style>
    .bordered-table {
        border: 1px solid #dee2e6;
        border-collapse: collapse;
        width: 100%;
    }
=======
﻿@using ASI.Basecode.Data.Models;
@model IEnumerable<VwFeedbackView>;

@{
    int userRoleId = ViewData["UserRoleId"] != null ? (int)ViewData["UserRoleId"] : 0;
    var averageRating = ViewData["AverageRating"] != null ? (decimal)ViewData["AverageRating"] : 0;
    var feedbackCount = ViewData["FeedbackCount"] != null ? (int)ViewData["FeedbackCount"] : 0;
    var agentName = ViewData["AgentName"] != null ? (string)ViewData["AgentName"] : "";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    @switch(userRoleId)
    {
        case 1:
            <h6>Feedbacks</h6>
            break;
        case 2:
            <h6 class="fw-bold">Feedbacks to <i>You</i></h6>
            break;
        case 3:
            <h6 class="fw-bold">Feedbacks to <i>Agent @agentName</i></h6>
            break;
        default:
            <h6>Feedbacks</h6>
            break;
    }
    @if (userRoleId == 1)
    {
        <a asp-controller="Feedback" asp-action="Create" class="btn btn-primary w-200-px">
            <i class="bi bi-plus-circle"></i> Create Feedback
        </a>
    }
</div>
@if (userRoleId == 2)
{
    <div class="d-flex justify-content-around align-items-center mb-4 bg-light p-3 rounded">
        <!-- Your Feedback Rating -->
        <div class="text-center">
            <span><b>Your Feedback Rating</b></span>
        </div>

        <!-- Average Rating with Stars -->
        <div class="text-center">
            <strong>Average Rating:</strong>
            @{
                int fullStars = (int)averageRating;
                bool hasHalfStar = ((double)averageRating - fullStars) >= 0.5;
            }
            <span class="ms-2">
                @for (int i = 1; i <= 5; i++)
                {
                    if (i <= fullStars)
                    {
                        <i class="bi bi-star-fill text-warning"></i>
                    }
                    else if (hasHalfStar && i == fullStars + 1)
                    {
                        <i class="bi bi-star-half text-warning"></i>
                    }
                    else
                    {
                        <i class="bi bi-star text-secondary"></i>
                    }
                }
                <span> (@averageRating.ToString("0.0"))</span>
            </span>
        </div>
        <div class="text-center">
            <strong>Total Feedbacks:</strong> @feedbackCount
        </div>
    </div>
}
<div class="table-responsive-scroll">
    <table class="table bordered-table">
        <thead>
            <tr>
                @if(userRoleId == 3) { <th>Feedback ID</th> }
                <th>Ticket ID</th>
                <th>Category</th>
                <th>Issue Description</th>
                <th>Status</th>
                <th>Feedback</th>
                @if(userRoleId == 3) { <th>Agent ID</th> }
                <th>Rating</th>
                <th>Date Created</th>
                @if(userRoleId == 1 || userRoleId == 3) { <th>Actions</th> }
            </tr>
        </thead>
        <tbody>
            @if (Model.Any())
            {
                @foreach (var feedback in Model)
                {
                    <tr>
                        @if(userRoleId == 3) { <td>@feedback.FeedbackId</td> }
                        <td>@feedback.UserTicketId</td>
                        <td>@feedback.TicketCategory</td>
                        <td>@feedback.IssueDescription</td>
                        <td>
                            @{
                                string statusText = feedback.StatusId == 3 ? "Resolved" :
                                                    feedback.StatusId == 4 ? "Closed" : "In Progress";
                            }
                            <span>@statusText</span>
                        </td>
                        <td>@feedback.FeedbackText</td>
                        @if(userRoleId == 3) { <td>@feedback.AgentId</td> }
                        <td>
                            <span>
                                @{
                                    int fullStars = (int)feedback.FeedbackRating;
                                    bool hasHalfStar = ((double)feedback.FeedbackRating - fullStars) >= 0.5;
                                }
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= fullStars)
                                    {
                                        <i class="bi bi-star-fill text-warning"></i>
                                    }
                                    else if (hasHalfStar && i == fullStars + 1)
                                    {
                                        <i class="bi bi-star-half text-warning"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-star text-secondary"></i>
                                    }
                                }
                                <span>(@feedback.FeedbackRating.ToString())</span>
                            </span>
                        </td>
                        <td>@feedback.CreatedAt?.ToString("MM/dd/yyyy")</td>
                        @if(userRoleId == 1)
                        {
                            <td class="text-center">
                                <a asp-action="Edit" asp-route-id="@feedback.FeedbackId">
                                    <i class="bi bi-pencil-square text-primary"></i>
                                </a> |
                                <a href="#" onclick="confirmDelete('@feedback.FeedbackId'); return false;" id="@feedback.FeedbackId">
                                    <i class="bi bi-trash text-danger"></i>
                                </a>
                            </td>
                        }
                        @if(userRoleId == 3)
                        {
                            <td class="text-center">
                                <a href="#" onclick="confirmDelete('@feedback.FeedbackId'); return false;" id="@feedback.FeedbackId">
                                    <i class="bi bi-trash text-danger"></i>
                                </a>
                            </td>
                        }
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="8" class="text-center">No feedback available</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script>
    function confirmDelete(feedbackId) 
    {
        if (confirm("Are you sure you want to delete this feedback?")) {
            fetch(`/Feedback/Delete/${feedbackId}`, {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val(),
                    'Content-Type': 'application/json'
                }
            })
                .then(response => {
                    if (response.ok) {
                        alert("Feedback deleted successfully.");
                        location.reload();
                    } else {
                        return response.json().then(err => alert(err.message));
                    }
                })
                .catch(error => console.error('Error:', error));
        }
    }
</script>
<style>
    .bg-light {
        background-color: #f8f9fa !important;
        display: flex;
        gap: 20px;
    }

    .table-responsive-scroll {
        max-height: 400px; /* Set maximum height for vertical scroll */
        overflow-y: auto;
        overflow-x: auto;
    }

    .bordered-table {
        width: 100%;
        border-collapse: collapse;
    }
    
>>>>>>> Stashed changes
    .bordered-table th, .bordered-table td {
        padding: 12px 15px;
        border: 1px solid #dee2e6;
    }
<<<<<<< Updated upstream
=======
    
>>>>>>> Stashed changes
    .bordered-table th {
        background-color: #f8f9fa;
        font-weight: 600;
    }
<<<<<<< Updated upstream
</style>
=======
    
    .bi-star, .bi-star-fill, .bi-star-half {
        font-size: 1.1rem;
    }
    .text-warning {
        color: #ffc107 !important;
    }
    .text-secondary {
        color: #6c757d !important;
    }
</style>
>>>>>>> Stashed changes
