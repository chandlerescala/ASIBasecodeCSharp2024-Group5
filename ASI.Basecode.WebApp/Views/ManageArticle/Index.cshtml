@using ASI.Basecode.Data.Models.CustomModels
@using ASI.Basecode.Data.Models
@model IEnumerable<Article>

@{
    // ViewData["Title"] = "Article";

    var userRole = User.FindFirst("UserRole")?.Value;

    if (!string.IsNullOrEmpty(userRole))
    {
        ViewData["Title"] = userRole == "user" ? "Article" : "Manage Articles";
    }

    var resMsg = TempData["ResMsg"] as string;
}

<div class="d-flex flex-wrap align-items-center justify-content-between gap-3 mb-24">
    <h6 class="fw-semibold mb-0">Article</h6>
    <ul class="d-flex align-items-center gap-2">
        <li class="fw-medium">
            <a href="index.html" class="d-flex align-items-center gap-1 hover-text-primary">
                <iconify-icon icon="solar:home-smile-angle-outline" class="icon text-lg"></iconify-icon>
                Dashboard
            </a>
        </li>
        <li>-</li>
        <li class="fw-medium">Article</li>
    </ul>
</div>

@* @if (!string.IsNullOrEmpty(resMsg))
{
    <div class="alert alert-success" role="alert">
        @resMsg
    </div>
} *@

<div class="mb-3">
    <form asp-action="Index" method="get" class="d-flex">
        <input type="text" name="searchTerm" class="form-control me-2" placeholder="Search articles..." />
        <button type="submit" class="btn btn-primary">Search</button>
    </form>
</div>
<a asp-action="Index" asp-route-sortBy="@ViewData["TitleSortParm"]" class = "btn btn-primary"> Sort </a>
@if (Convert.ToString(User.FindFirst("UserRole")?.Value) != "user")
{
    <div class="text-end mt-3">
        <a asp-action="Create" class="btn btn-primary w-200-px"><i class="bi bi-plus-circle"></i>&nbsp; Add New Article</a>
    </div>
}
<div class="row g-4">
    @foreach (var item in Model)
    {
        <div class="col-md-4">
            <div class="card h-100">
                <div class="card-body">
                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h5>
                    <p class="card-text">@Html.DisplayFor(modelItem => item.Content)</p>

                    @if (Convert.ToString(User.FindFirst("UserRole")?.Value) != "user")
                    {
                        <div class="card-footer text-end">
                            <a asp-action="Edit" asp-route-id="@item.ArticleId" class="btn btn-outline-primary">
                                <i class="bi bi-pencil-square"> </i>
                            </a>
                            <a href="#" onclick="confirmDelete('@item.ArticleId'); return false;" id="@item.ArticleId"><i class="bi bi-trash" style="color:red"></i></a>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>


<script src="~/assets/js/lib/jquery-3.7.1.min.js"></script>
<script src="~/toastr/toastr.min.js"></script>
<script type="text/javascript">

    function confirmDelete(articleId) {
        toastr.options = {
            closeButton: true,
            timeOut: 0,
            extendedTimeOut: 0,
            positionClass: "toast-top-center",
        };

        toastr.warning(
            "<button type='button' id='confirmYes' class='btn btn-primary btn-sm'>Yes</button><button type='button' id='confirmNo' class='btn btn-secondary btn-sm'>No</button>",
            'Are you sure you want to delete this article?',
            {
                allowHtml: true,
                onShown: function (toast) {
                    document.getElementById('confirmYes').addEventListener('click', async function () {
                        console.log('Confirmed delete for ArticleId:', articleId);
                        try {
                            const url = `/ManageArticle/Delete/?id=${articleId}`;
                            const response = await fetch(url, { method: "get" });

                            window.location.href = `@Url.ActionLink("Index", "ManageArticle")`;
                        } catch (error) {
                            console.error('Fetch error:', error);
                            window.location.reload();
                        }
                        toastr.clear(toast);
                    });

                    document.getElementById('confirmNo').addEventListener('click', function () {
                        console.log('Canceled delete');
                        toastr.clear(toast);
                    });
                }
            }
        );
    }
</script>
